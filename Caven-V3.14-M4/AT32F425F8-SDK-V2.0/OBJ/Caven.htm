<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [..\OBJ\Caven.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ..\OBJ\Caven.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060960: Last Updated: Fri May 05 13:53:43 2023
<BR><P>
<H3>Maximum Stack Usage =        120 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; Main_Init &rArr; system_clock_config &rArr; system_core_clock_update &rArr; __aeabi_uldivmod
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[12]">ACC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[12]">ACC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[12]">ACC_IRQHandler</a> from startup_at32f425.o(.text) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[16]">ADC1_IRQHandler</a> from startup_at32f425.o(.text) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[4]">BusFault_Handler</a> from at32f425_int.o(i.BusFault_Handler) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[28]">CAN1_IRQHandler</a> from startup_at32f425.o(.text) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[e]">CRM_IRQHandler</a> from startup_at32f425.o(.text) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[13]">DMA1_Channel1_IRQHandler</a> from base_adc.o(i.DMA1_Channel1_IRQHandler) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[14]">DMA1_Channel3_2_IRQHandler</a> from startup_at32f425.o(.text) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[15]">DMA1_Channel7_4_IRQHandler</a> from startup_at32f425.o(.text) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from at32f425_int.o(i.DebugMon_Handler) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[c]">ERTC_IRQHandler</a> from startup_at32f425.o(.text) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[11]">EXINT15_4_IRQHandler</a> from startup_at32f425.o(.text) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[f]">EXINT1_0_IRQHandler</a> from startup_at32f425.o(.text) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[10]">EXINT3_2_IRQHandler</a> from startup_at32f425.o(.text) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[d]">FLASH_IRQHandler</a> from startup_at32f425.o(.text) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from at32f425_int.o(i.HardFault_Handler) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[2a]">I2C1_ERR_IRQHandler</a> from startup_at32f425.o(.text) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[21]">I2C1_EVT_IRQHandler</a> from startup_at32f425.o(.text) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[2c]">I2C2_ERR_IRQHandler</a> from startup_at32f425.o(.text) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[22]">I2C2_EVT_IRQHandler</a> from startup_at32f425.o(.text) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[3]">MemManage_Handler</a> from at32f425_int.o(i.MemManage_Handler) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from at32f425_int.o(i.NMI_Handler) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[29]">OTGFS1_IRQHandler</a> from startup_at32f425.o(.text) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[b]">PVM_IRQHandler</a> from startup_at32f425.o(.text) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from at32f425_int.o(i.PendSV_Handler) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_at32f425.o(.text) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[23]">SPI1_IRQHandler</a> from startup_at32f425.o(.text) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[24]">SPI2_IRQHandler</a> from startup_at32f425.o(.text) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[2b]">SPI3_IRQHandler</a> from startup_at32f425.o(.text) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[6]">SVC_Handler</a> from at32f425_int.o(i.SVC_Handler) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from base_sys_time.o(i.SysTick_Handler) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[2f]">SystemInit</a> from system_at32f425.o(i.SystemInit) referenced from startup_at32f425.o(.text)
 <LI><a href="#[2d]">TMR13_GLOBAL_IRQHandler</a> from startup_at32f425.o(.text) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[1d]">TMR14_GLOBAL_IRQHandler</a> from startup_at32f425.o(.text) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[1e]">TMR15_GLOBAL_IRQHandler</a> from startup_at32f425.o(.text) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[1f]">TMR16_GLOBAL_IRQHandler</a> from startup_at32f425.o(.text) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[20]">TMR17_GLOBAL_IRQHandler</a> from startup_at32f425.o(.text) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[17]">TMR1_BRK_OVF_TRG_HALL_IRQHandler</a> from startup_at32f425.o(.text) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[18]">TMR1_CH_IRQHandler</a> from startup_at32f425.o(.text) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[19]">TMR2_GLOBAL_IRQHandler</a> from startup_at32f425.o(.text) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[1a]">TMR3_GLOBAL_IRQHandler</a> from startup_at32f425.o(.text) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[1b]">TMR6_GLOBAL_IRQHandler</a> from startup_at32f425.o(.text) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[1c]">TMR7_GLOBAL_IRQHandler</a> from startup_at32f425.o(.text) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[25]">USART1_IRQHandler</a> from mode_uart.o(i.USART1_IRQHandler) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[26]">USART2_IRQHandler</a> from mode_uart.o(i.USART2_IRQHandler) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[27]">USART4_3_IRQHandler</a> from startup_at32f425.o(.text) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from at32f425_int.o(i.UsageFault_Handler) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[a]">WWDT_IRQHandler</a> from startup_at32f425.o(.text) referenced from startup_at32f425.o(RESET)
 <LI><a href="#[30]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_at32f425.o(.text)
 <LI><a href="#[2e]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[30]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(.text)
</UL>
<P><STRONG><a name="[73]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[31]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[36]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[74]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[75]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[76]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[77]"></a>__rt_lib_shutdown_fini</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry12b.o(.ARM.Collect$$$$0000000E))

<P><STRONG><a name="[78]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[79]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$00000011))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_at32f425.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>ACC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f425.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f425.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>CAN1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f425.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>CRM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f425.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>DMA1_Channel3_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f425.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Channel7_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f425.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>ERTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f425.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXINT15_4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f425.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>EXINT1_0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f425.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXINT3_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f425.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f425.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>I2C1_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f425.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>I2C1_EVT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f425.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>I2C2_ERR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f425.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>I2C2_EVT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f425.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>OTGFS1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f425.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f425.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f425.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f425.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f425.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>TMR13_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f425.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>TMR14_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f425.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>TMR15_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f425.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>TMR16_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f425.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>TMR17_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f425.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TMR1_BRK_OVF_TRG_HALL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f425.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TMR1_CH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f425.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TMR2_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f425.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TMR3_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f425.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TMR6_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f425.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>TMR7_GLOBAL_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f425.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>USART4_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f425.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_at32f425.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_SysTick
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_core_clock_update
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TIME
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_clocks_freq_get
</UL>

<P><STRONG><a name="[58]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Send_String
</UL>

<P><STRONG><a name="[35]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[7a]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[34]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[7b]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[32]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[7c]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f425_int.o(i.BusFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, base_adc.o(i.DMA1_Channel1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DMA1_Channel1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_flag_get
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dma_flag_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f425_int.o(i.DebugMon_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>Debug_Out</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, mode.o(i.Debug_Out), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Send_String
</UL>

<P><STRONG><a name="[3d]"></a>GET_SysTick</STRONG> (Thumb, 88 bytes, Stack size 20 bytes, base_sys_time.o(i.GET_SysTick), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Delay_us
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Delay_ms
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TIME
</UL>

<P><STRONG><a name="[3b]"></a>Get_Lose_Tiem</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, mode_time.o(i.Get_Lose_Tiem), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TIME
</UL>

<P><STRONG><a name="[3c]"></a>Get_TIME</STRONG> (Thumb, 160 bytes, Stack size 48 bytes, mode_time.o(i.Get_TIME), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_SysTick
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Seconds_to_Hourly
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_TIME
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Lose_Tiem
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f425_int.o(i.HardFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>Hourly_to_Seconds</STRONG> (Thumb, 62 bytes, Stack size 12 bytes, time_handle.o(i.Hourly_to_Seconds), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_TIME
</UL>

<P><STRONG><a name="[40]"></a>Main_Init</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, main.o(i.Main_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Main_Init &rArr; system_clock_config &rArr; system_core_clock_update &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_default_para_init
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_adc_clock_div_set
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mode_Index
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f425_int.o(i.MemManage_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>Mode_Index</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, mode.o(i.Mode_Index))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Mode_Index
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mode_User_index
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Init
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f425_int.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f425_int.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>SET_SysTick</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, base_sys_time.o(i.SET_SysTick), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_TIME
</UL>

<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, at32f425_int.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>SYS_Delay_S</STRONG> (Thumb, 24 bytes, Stack size 12 bytes, base_sys_time.o(i.SYS_Delay_S), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Delay_ms
</UL>

<P><STRONG><a name="[4a]"></a>SYS_Delay_ms</STRONG> (Thumb, 128 bytes, Stack size 36 bytes, base_sys_time.o(i.SYS_Delay_ms), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_SysTick
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_Delay_S
</UL>

<P><STRONG><a name="[4b]"></a>SYS_Delay_us</STRONG> (Thumb, 128 bytes, Stack size 36 bytes, base_sys_time.o(i.SYS_Delay_us), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GET_SysTick
</UL>

<P><STRONG><a name="[3e]"></a>Seconds_to_Hourly</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, time_handle.o(i.Seconds_to_Hourly), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TIME
</UL>

<P><STRONG><a name="[3f]"></a>Set_TIME</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, mode_time.o(i.Set_TIME), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SET_SysTick
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hourly_to_Seconds
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_TIME
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, base_sys_time.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>Sys_Clock_Init</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, mode_time.o(i.Sys_Clock_Init), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Time_Init
</UL>

<P><STRONG><a name="[4e]"></a>Sys_Time_Init</STRONG> (Thumb, 246 bytes, Stack size 16 bytes, base_sys_time.o(i.Sys_Time_Init), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;systick_clock_source_config
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Clock_Init
</UL>

<P><STRONG><a name="[2f]"></a>SystemInit</STRONG> (Thumb, 154 bytes, Stack size 0 bytes, system_at32f425.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(.text)
</UL>
<P><STRONG><a name="[50]"></a>UART_RXD_Flag</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, base_uart.o(i.UART_RXD_Flag))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_RXD_Flag
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[52]"></a>UART_RXD_Flag_Clear</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, base_uart.o(i.UART_RXD_Flag_Clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_RXD_Flag_Clear
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_flag_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[54]"></a>UART_RXD_Receive</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, base_uart.o(i.UART_RXD_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_RXD_Receive
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_receive
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[56]"></a>UART_Send_Data</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, mode_uart.o(i.UART_Send_Data), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TXD_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Send_String
</UL>

<P><STRONG><a name="[3a]"></a>UART_Send_String</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, mode_uart.o(i.UART_Send_String), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Send_Data
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Debug_Out
</UL>

<P><STRONG><a name="[57]"></a>UART_TXD_Send</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, base_uart.o(i.UART_TXD_Send))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_TXD_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_flag_get
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_data_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Send_Data
</UL>

<P><STRONG><a name="[25]"></a>USART1_IRQHandler</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, mode_uart.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USART1_IRQHandler &rArr; UART_TXD_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TXD_Send
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RXD_Receive
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RXD_Flag_Clear
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RXD_Flag
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_RXD
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>USART2_IRQHandler</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, mode_uart.o(i.USART2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USART2_IRQHandler &rArr; UART_TXD_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TXD_Send
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RXD_Receive
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RXD_Flag_Clear
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RXD_Flag
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_RXD
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>Uart1_Init</STRONG> (Thumb, 260 bytes, Stack size 24 bytes, base_uart.o(i.Uart1_Init), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_transmitter_enable
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_reset
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_receiver_enable
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_parity_selection_config
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_enable
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_enable
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_config
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_default_para_init
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Init
</UL>

<P><STRONG><a name="[65]"></a>Uart2_Init</STRONG> (Thumb, 256 bytes, Stack size 24 bytes, base_uart.o(i.Uart2_Init), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_transmitter_enable
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_reset
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_receiver_enable
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_parity_selection_config
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_interrupt_enable
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_enable
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_priority_group_config
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nvic_irq_enable
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_init
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gpio_default_para_init
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart_Init
</UL>

<P><STRONG><a name="[66]"></a>Uart_Init</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, mode_uart.o(i.Uart_Init), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2_Init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1_Init
</UL>

<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, at32f425_int.o(i.UsageFault_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_at32f425.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[7e]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[7f]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[42]"></a>crm_adc_clock_div_set</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, at32f425_crm.o(i.crm_adc_clock_div_set))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Init
</UL>

<P><STRONG><a name="[6d]"></a>crm_ahb_div_set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f425_crm.o(i.crm_ahb_div_set))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[6f]"></a>crm_apb1_div_set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f425_crm.o(i.crm_apb1_div_set))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[6e]"></a>crm_apb2_div_set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f425_crm.o(i.crm_apb2_div_set))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[6a]"></a>crm_clock_source_enable</STRONG> (Thumb, 152 bytes, Stack size 0 bytes, at32f425_crm.o(i.crm_clock_source_enable))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[67]"></a>crm_clocks_freq_get</STRONG> (Thumb, 580 bytes, Stack size 56 bytes, at32f425_crm.o(i.crm_clocks_freq_get), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_sysclk_switch_status_get
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_init
</UL>

<P><STRONG><a name="[6b]"></a>crm_flag_get</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, at32f425_crm.o(i.crm_flag_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = crm_flag_get
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[43]"></a>crm_periph_clock_enable</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, at32f425_crm.o(i.crm_periph_clock_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = crm_periph_clock_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2_Init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1_Init
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Init
</UL>

<P><STRONG><a name="[72]"></a>crm_periph_reset</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, at32f425_crm.o(i.crm_periph_reset), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usart_reset
</UL>

<P><STRONG><a name="[6c]"></a>crm_pll_config</STRONG> (Thumb, 374 bytes, Stack size 12 bytes, at32f425_crm.o(i.crm_pll_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = crm_pll_config
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[69]"></a>crm_reset</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, at32f425_crm.o(i.crm_reset))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[70]"></a>crm_sysclk_switch</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at32f425_crm.o(i.crm_sysclk_switch))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[68]"></a>crm_sysclk_switch_status_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at32f425_crm.o(i.crm_sysclk_switch_status_get))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_core_clock_update
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_clocks_freq_get
</UL>

<P><STRONG><a name="[38]"></a>dma_flag_clear</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f425_dma.o(i.dma_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
</UL>

<P><STRONG><a name="[37]"></a>dma_flag_get</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, at32f425_dma.o(i.dma_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel1_IRQHandler
</UL>

<P><STRONG><a name="[44]"></a>gpio_default_para_init</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, at32f425_gpio.o(i.gpio_default_para_init))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2_Init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1_Init
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Init
</UL>

<P><STRONG><a name="[46]"></a>gpio_init</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, at32f425_gpio.o(i.gpio_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gpio_init
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2_Init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1_Init
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Init
</UL>

<P><STRONG><a name="[2e]"></a>main</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = main &rArr; Main_Init &rArr; system_clock_config &rArr; system_core_clock_update &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[5e]"></a>nvic_irq_enable</STRONG> (Thumb, 206 bytes, Stack size 32 bytes, at32f425_misc.o(i.nvic_irq_enable), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2_Init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1_Init
</UL>

<P><STRONG><a name="[5d]"></a>nvic_priority_group_config</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, at32f425_misc.o(i.nvic_priority_group_config), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2_Init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1_Init
</UL>

<P><STRONG><a name="[41]"></a>system_clock_config</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, at32f425_clock.o(i.system_clock_config))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = system_clock_config &rArr; system_core_clock_update &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_core_clock_update
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_sysclk_switch_status_get
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_sysclk_switch
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_reset
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_pll_config
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_flag_get
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_clock_source_enable
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_apb2_div_set
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_apb1_div_set
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_ahb_div_set
</UL>
<BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_Init
</UL>

<P><STRONG><a name="[71]"></a>system_core_clock_update</STRONG> (Thumb, 510 bytes, Stack size 56 bytes, system_at32f425.o(i.system_core_clock_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = system_core_clock_update &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_sysclk_switch_status_get
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_clock_config
</UL>

<P><STRONG><a name="[4f]"></a>systick_clock_source_config</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, at32f425_misc.o(i.systick_clock_source_config), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Time_Init
</UL>

<P><STRONG><a name="[55]"></a>usart_data_receive</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, at32f425_usart.o(i.usart_data_receive))
<BR><BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RXD_Receive
</UL>

<P><STRONG><a name="[59]"></a>usart_data_transmit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, at32f425_usart.o(i.usart_data_transmit))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TXD_Send
</UL>

<P><STRONG><a name="[64]"></a>usart_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f425_usart.o(i.usart_enable), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2_Init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1_Init
</UL>

<P><STRONG><a name="[53]"></a>usart_flag_clear</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, at32f425_usart.o(i.usart_flag_clear))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RXD_Flag_Clear
</UL>

<P><STRONG><a name="[51]"></a>usart_flag_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, at32f425_usart.o(i.usart_flag_get))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_TXD_Send
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_RXD_Flag
</UL>

<P><STRONG><a name="[5f]"></a>usart_init</STRONG> (Thumb, 166 bytes, Stack size 48 bytes, at32f425_usart.o(i.usart_init), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_clocks_freq_get
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2_Init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1_Init
</UL>

<P><STRONG><a name="[63]"></a>usart_interrupt_enable</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, at32f425_usart.o(i.usart_interrupt_enable), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2_Init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1_Init
</UL>

<P><STRONG><a name="[62]"></a>usart_parity_selection_config</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, at32f425_usart.o(i.usart_parity_selection_config), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2_Init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1_Init
</UL>

<P><STRONG><a name="[61]"></a>usart_receiver_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f425_usart.o(i.usart_receiver_enable), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2_Init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1_Init
</UL>

<P><STRONG><a name="[5c]"></a>usart_reset</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, at32f425_usart.o(i.usart_reset), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;crm_periph_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2_Init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1_Init
</UL>

<P><STRONG><a name="[60]"></a>usart_transmitter_enable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, at32f425_usart.o(i.usart_transmitter_enable), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart2_Init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart1_Init
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[47]"></a>Mode_User_index</STRONG> (Thumb, 150 bytes, Stack size 0 bytes, mode.o(i.Mode_User_index))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mode_Index
</UL>

<P><STRONG><a name="[5a]"></a>Get_RXD</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, mode_uart.o(i.Get_RXD))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART2_IRQHandler
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
